"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(t="Object"===t&&e.constructor?e.constructor.name:t)||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}document.addEventListener("DOMContentLoaded",function(){function n(e,r){var t=(e=e.parentElement).querySelector(".error-text");e.classList.add("error"),t.textContent=r}function o(e){e.parentElement.classList.remove("error")}function r(){_toConsumableArray(Array(y.length).keys()).forEach(function(e){return l[e].classList.remove("nav-black")})}var e,t=document.querySelector("#footer-year"),a=document.querySelector(".ti-menu-2"),c=document.querySelector(".nav-mobile"),l=document.querySelectorAll("#nav"),i=(document.querySelector(".nav__items"),document.querySelector("#username")),s=document.querySelector("#email"),u=document.querySelector(".clear"),d=document.querySelector(".send"),f=(document.querySelector(".close"),document.querySelector(".popup")),y=document.querySelectorAll(".section"),m=document.querySelector(".burger-btn__bars"),v=(e=(new Date).getFullYear(),t.innerHTML=e,a.addEventListener("click",function(){c.classList.toggle("actives"),a.classList.toggle("black-bars-color"),l.forEach(function(e){e.addEventListener("click",function(){c.classList.remove("actives"),a.classList.remove("black-bars-color")})})}),window.addEventListener("scroll",function(){var r=window.scrollY;y.forEach(function(e){e.classList.contains("white-section")&&e.offsetTop<=r+60?m.classList.add("black-bars-color"):!e.classList.contains("white-section")&&e.offsetTop<=r+60&&m.classList.remove("black-bars-color")})}),d.addEventListener("click",function(e){var r,t;e.preventDefault(),[i,s].forEach(function(e){""===e.value?n(e,e.placeholder):o(e)}),e=3,(r=i).value<e&&n(r,"".concat(r.previousElementSibling.innerText.slice(0,-1)," musi zawierać min.").concat(e," znaków")),r=s,/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(r.value)?o(r):n(r,"E-mail jest niepoprawny"),e=document.querySelectorAll(".form-box"),t=0,e.forEach(function(e){e.classList.contains("error")&&t++}),0===t&&f.classList.add("show-popup")}),u.addEventListener("click",function(e){e.preventDefault(),[i,s].forEach(function(e){e.value="",o(e)})}),0);window.addEventListener("scroll",function(){var e=y.length-_toConsumableArray(sections).reverse().findIndex(function(e){return window.scrollY>=e.offsetTop-200})-1;e!==v&&(r(),l[v=e].classList.add("nav-black"))})},!1);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
